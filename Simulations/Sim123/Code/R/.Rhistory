S_PMSE2 = data.frame(sparse=numeric(rep),fast=numeric(rep),infomax=numeric(rep),ebm=numeric(rep),sfi=numeric(rep),sparse40=numeric(rep),fast40=numeric(rep),infomax40=numeric(rep))
M_PMSE2 = data.frame(sparse=numeric(rep),fast=numeric(rep),infomax=numeric(rep),ebm=numeric(rep),sfi=numeric(rep),sparse40=numeric(rep),fast40=numeric(rep),infomax40=numeric(rep))
TIME2 = data.frame(sparse=numeric(rep),fast=numeric(rep),infomax=numeric(rep),ebm=numeric(rep),sfi=numeric(rep),sparse40=numeric(rep),fast40=numeric(rep),infomax40=numeric(rep))
load("../Data/sim123_nonsparse_mediumSNR.RData")
load("../../Data/sim123_nonsparse_mediumSNR.RData")
for (i in 1:rep) {
xmat = xmat_list[[i]]
smat = smat_list[[i]]
mmat = mmat_list[[i]]
# standardized xmat and PCA
xmat_center = scale(xmat,center = T,scale = F)
###############################################################################
# sparse ica single start
select_sparseICA= BIC_sparseICA_Rcpp(xData = xmat, n.comp = 3,U.list=NULL,whiten = "eigenvec", restarts.pbyd = 40,
lambda = sqrt(2)/2, eps = my_eps,maxit.laplace = my_maxit,
BIC_plot = F,show_message=F,nu_list = seq(0.1,4,0.1))
my_nu = select_sparseICA$best_nu
sparse.start.time = Sys.time()
my_sparseICA = sparseICA_Rcpp(xData = xmat, n.comp = 3,col.stand = T,row.stand = F,iter.stand=0,
U.list=NULL,whiten = "eigenvec", restarts.pbyd = 1,lambda = sqrt(2)/2,
nu = my_nu,eps = my_eps,maxit.laplace = my_maxit, converge_plot = F)
sparse.end.time = Sys.time()
#my_S_sparse = matchICA(my_sparseICA$estS,smat)
my_M_sparse = est.M.ols(my_sparseICA$estS,xmat_center)
S_PMSE2$sparse[i] = sqrt(frobICA(S1=my_sparseICA$estS,S2=smat,standardize = TRUE))
M_PMSE2$sparse[i] = sqrt(frobICA(M1=my_M_sparse,M2=mmat,standardize = TRUE))
TIME2$sparse[i] = as.numeric(sparse.end.time - sparse.start.time)
# sparse ica 40 starts
sparse.start.time = Sys.time()
my_sparseICA = sparseICA_Rcpp(xData = xmat, n.comp = 3,col.stand = T,row.stand = F,iter.stand=0,
U.list=NULL,whiten = "eigenvec", restarts.pbyd = 40,lambda = sqrt(2)/2,
nu = my_nu,eps = my_eps,maxit.laplace = my_maxit, converge_plot = F)
sparse.end.time = Sys.time()
#my_S_sparse = matchICA(my_sparseICA$estS,smat)
my_M_sparse = est.M.ols(my_sparseICA$estS,xmat_center)
S_PMSE2$sparse40[i] = sqrt(frobICA(S1=my_sparseICA$estS,S2=smat,standardize = TRUE))
M_PMSE2$sparse40[i] = sqrt(frobICA(M1=my_M_sparse,M2=mmat,standardize = TRUE))
TIME2$sparse40[i] = as.numeric(sparse.end.time - sparse.start.time)
###############################################################################
infomax.start.time = Sys.time()
my_infomaxICA = infomaxICA(X=xmat,n.comp = 3,whiten = TRUE,eps = my_eps,maxit = my_maxit)
infomax.end.time = Sys.time()
#my_S_infomax = matchICA(my_infomaxICA$S,smat)
#my_M_infomax = est.M.ols(my_S_infomax,xmat_center)
S_PMSE2$infomax[i] = sqrt(frobICA(S1=my_infomaxICA$S,S2=smat,standardize = TRUE))
M_PMSE2$infomax[i] = sqrt(frobICA(M1=my_infomaxICA$M,M2=mmat,standardize = TRUE))
TIME2$infomax[i] = as.numeric(infomax.end.time - infomax.start.time)
# infomax 40 starts
infomax.start.time = Sys.time()
my_infomaxICA = infomaxICA(X=xmat,n.comp = 3,whiten = TRUE,eps = my_eps,maxit = my_maxit,restarts = 40)
infomax.end.time = Sys.time()
#my_S_infomax = matchICA(my_infomaxICA$S,smat)
#my_M_infomax = est.M.ols(my_S_infomax,xmat_center)
S_PMSE2$infomax40[i] = sqrt(frobICA(S1=my_infomaxICA$S,S2=smat,standardize = TRUE))
M_PMSE2$infomax40[i] = sqrt(frobICA(M1=my_infomaxICA$M,M2=mmat,standardize = TRUE))
TIME2$infomax40[i] = as.numeric(infomax.end.time - infomax.start.time)
###############################################################################
fast.start.time = Sys.time()
my_fastICA = fastICA(xmat,n.comp = 3,maxit = my_maxit,tol=my_eps,method = "C")
fast.end.time = Sys.time()
#my_S_fast = matchICA(my_fastICA$S,smat)
#my_M_fast = est.M.ols(my_S_fast,xmat_center)
S_PMSE2$fast[i] = sqrt(frobICA(S1=my_fastICA$S,S2=smat,standardize = TRUE))
M_PMSE2$fast[i] = sqrt(frobICA(M1=my_fastICA$A,M2=mmat,standardize = TRUE))
TIME2$fast[i] = as.numeric(fast.end.time - fast.start.time)
# fast ica 40 starts
fast.start.time = Sys.time()
my_fastICA = fastICA_restarts(xmat,n.comp = 3,maxit = my_maxit,tol=my_eps,restarts = 40,method = "C")
fast.end.time = Sys.time()
#my_S_fast = matchICA(my_fastICA$S,smat)
#my_M_fast = est.M.ols(my_S_fast,xmat_center)
S_PMSE2$fast40[i] = sqrt(frobICA(S1=my_fastICA$S,S2=smat,standardize = TRUE))
M_PMSE2$fast40[i] = sqrt(frobICA(M1=my_fastICA$A,M2=mmat,standardize = TRUE))
TIME2$fast40[i] = as.numeric(fast.end.time - fast.start.time)
###############################################################################
filename = paste0("../../Results/nonsparse/EBM/medium/estS_",i,".mat")
dat = readMat(filename)
temp = cbind(smat,matrix(rnorm(47*1089),nrow = 1089))
my_S_EBM = matchICA(t(dat$myS),temp)
my_S_EBM = my_S_EBM[,1:3]
my_M_EBM = est.M.ols(my_S_EBM,xmat_center)
S_PMSE2$ebm[i] = sqrt(frobICA(S1=my_S_EBM,S2=smat,standardize = TRUE))
M_PMSE2$ebm[i] = sqrt(frobICA(M1=my_M_EBM,M2=mmat,standardize = TRUE))
TIME2$ebm[i] = as.numeric(dat$tEnd)
###############################################################################
filename = paste0("../../Results/nonsparse/sparsefast/medium/estS_",i,".mat")
dat = readMat(filename)
#my_S_sfi = matchICA(t(dat$myS),smat)
#my_M_sfi = est.M.ols(my_S_sfi,xmat_center)
S_PMSE2$sfi[i] = sqrt(frobICA(S1=t(dat$myS),S2=smat,standardize = TRUE))
M_PMSE2$sfi[i] = sqrt(frobICA(M1=t(dat$A),M2=mmat,standardize = TRUE))
TIME2$sfi[i] = as.numeric(dat$tEnd)
}
#######################################################################################################
# Medium SNR
S_PMSE2 = data.frame(sparse=numeric(rep),fast=numeric(rep),infomax=numeric(rep),ebm=numeric(rep),sfi=numeric(rep),sparse40=numeric(rep),fast40=numeric(rep),infomax40=numeric(rep))
M_PMSE2 = data.frame(sparse=numeric(rep),fast=numeric(rep),infomax=numeric(rep),ebm=numeric(rep),sfi=numeric(rep),sparse40=numeric(rep),fast40=numeric(rep),infomax40=numeric(rep))
TIME2 = data.frame(sparse=numeric(rep),fast=numeric(rep),infomax=numeric(rep),ebm=numeric(rep),sfi=numeric(rep),sparse40=numeric(rep),fast40=numeric(rep),infomax40=numeric(rep))
load("../../Data/sim123_nonsparse_mediumSNR.RData")
for (i in 1:rep) {
xmat = xmat_list[[i]]
smat = smat_list[[i]]
mmat = mmat_list[[i]]
# standardized xmat and PCA
xmat_center = scale(xmat,center = T,scale = F)
######################################
# Sparse ICA - single restart
######################################
select_sparseICA= BIC_sparseICA(xData = xmat,n.comp = 3,U.list = NULL,whiten = "eigenvec",
eps = my_eps,maxit = my_maxit,method = "C",irlba = TRUE,
verbose = FALSE,BIC_plot = FALSE,nu_list = seq(0.1,4,0.1))
my_nu = select_sparseICA$best_nu
sparse.start.time = Sys.time()
my_sparseICA = sparseICA(xData = xmat,n.comp = 3,nu = my_nu,whiten = "eigenvec",method = "C",
restarts = 1,irlba = TRUE,eps = my_eps,maxit = my_maxit,verbose = F)
sparse.end.time = Sys.time()
#my_S_sparse = matchICA(my_sparseICA$estS,smat)
my_M_sparse = est.M.ols(my_sparseICA$estS,xmat_center)
S_PMSE2$sparse[i] = sqrt(frobICA(S1=my_sparseICA$estS,S2=smat,standardize = TRUE))
M_PMSE2$sparse[i] = sqrt(frobICA(M1=my_M_sparse,M2=mmat,standardize = TRUE))
TIME2$sparse[i] = as.numeric(sparse.end.time - sparse.start.time)
# sparse ica 40 starts
sparse.start.time = Sys.time()
my_sparseICA = sparseICA_Rcpp(xData = xmat, n.comp = 3,col.stand = T,row.stand = F,iter.stand=0,
U.list=NULL,whiten = "eigenvec", restarts.pbyd = 40,lambda = sqrt(2)/2,
nu = my_nu,eps = my_eps,maxit.laplace = my_maxit, converge_plot = F)
sparse.end.time = Sys.time()
#my_S_sparse = matchICA(my_sparseICA$estS,smat)
my_M_sparse = est.M.ols(my_sparseICA$estS,xmat_center)
S_PMSE2$sparse40[i] = sqrt(frobICA(S1=my_sparseICA$estS,S2=smat,standardize = TRUE))
M_PMSE2$sparse40[i] = sqrt(frobICA(M1=my_M_sparse,M2=mmat,standardize = TRUE))
TIME2$sparse40[i] = as.numeric(sparse.end.time - sparse.start.time)
###############################################################################
infomax.start.time = Sys.time()
my_infomaxICA = infomaxICA(X=xmat,n.comp = 3,whiten = TRUE,eps = my_eps,maxit = my_maxit)
infomax.end.time = Sys.time()
#my_S_infomax = matchICA(my_infomaxICA$S,smat)
#my_M_infomax = est.M.ols(my_S_infomax,xmat_center)
S_PMSE2$infomax[i] = sqrt(frobICA(S1=my_infomaxICA$S,S2=smat,standardize = TRUE))
M_PMSE2$infomax[i] = sqrt(frobICA(M1=my_infomaxICA$M,M2=mmat,standardize = TRUE))
TIME2$infomax[i] = as.numeric(infomax.end.time - infomax.start.time)
# infomax 40 starts
infomax.start.time = Sys.time()
my_infomaxICA = infomaxICA(X=xmat,n.comp = 3,whiten = TRUE,eps = my_eps,maxit = my_maxit,restarts = 40)
infomax.end.time = Sys.time()
#my_S_infomax = matchICA(my_infomaxICA$S,smat)
#my_M_infomax = est.M.ols(my_S_infomax,xmat_center)
S_PMSE2$infomax40[i] = sqrt(frobICA(S1=my_infomaxICA$S,S2=smat,standardize = TRUE))
M_PMSE2$infomax40[i] = sqrt(frobICA(M1=my_infomaxICA$M,M2=mmat,standardize = TRUE))
TIME2$infomax40[i] = as.numeric(infomax.end.time - infomax.start.time)
###############################################################################
fast.start.time = Sys.time()
my_fastICA = fastICA(xmat,n.comp = 3,maxit = my_maxit,tol=my_eps,method = "C")
fast.end.time = Sys.time()
#my_S_fast = matchICA(my_fastICA$S,smat)
#my_M_fast = est.M.ols(my_S_fast,xmat_center)
S_PMSE2$fast[i] = sqrt(frobICA(S1=my_fastICA$S,S2=smat,standardize = TRUE))
M_PMSE2$fast[i] = sqrt(frobICA(M1=my_fastICA$A,M2=mmat,standardize = TRUE))
TIME2$fast[i] = as.numeric(fast.end.time - fast.start.time)
# fast ica 40 starts
fast.start.time = Sys.time()
my_fastICA = fastICA_restarts(xmat,n.comp = 3,maxit = my_maxit,tol=my_eps,restarts = 40,method = "C")
fast.end.time = Sys.time()
#my_S_fast = matchICA(my_fastICA$S,smat)
#my_M_fast = est.M.ols(my_S_fast,xmat_center)
S_PMSE2$fast40[i] = sqrt(frobICA(S1=my_fastICA$S,S2=smat,standardize = TRUE))
M_PMSE2$fast40[i] = sqrt(frobICA(M1=my_fastICA$A,M2=mmat,standardize = TRUE))
TIME2$fast40[i] = as.numeric(fast.end.time - fast.start.time)
###############################################################################
filename = paste0("../../Results/nonsparse/EBM/medium/estS_",i,".mat")
dat = readMat(filename)
temp = cbind(smat,matrix(rnorm(47*1089),nrow = 1089))
my_S_EBM = matchICA(t(dat$myS),temp)
my_S_EBM = my_S_EBM[,1:3]
my_M_EBM = est.M.ols(my_S_EBM,xmat_center)
S_PMSE2$ebm[i] = sqrt(frobICA(S1=my_S_EBM,S2=smat,standardize = TRUE))
M_PMSE2$ebm[i] = sqrt(frobICA(M1=my_M_EBM,M2=mmat,standardize = TRUE))
TIME2$ebm[i] = as.numeric(dat$tEnd)
###############################################################################
filename = paste0("../../Results/nonsparse/sparsefast/medium/estS_",i,".mat")
dat = readMat(filename)
#my_S_sfi = matchICA(t(dat$myS),smat)
#my_M_sfi = est.M.ols(my_S_sfi,xmat_center)
S_PMSE2$sfi[i] = sqrt(frobICA(S1=t(dat$myS),S2=smat,standardize = TRUE))
M_PMSE2$sfi[i] = sqrt(frobICA(M1=t(dat$A),M2=mmat,standardize = TRUE))
TIME2$sfi[i] = as.numeric(dat$tEnd)
}
#######################################################################################################
# Medium SNR
S_PMSE2 = data.frame(sparse=numeric(rep),fast=numeric(rep),infomax=numeric(rep),ebm=numeric(rep),sfi=numeric(rep),sparse40=numeric(rep),fast40=numeric(rep),infomax40=numeric(rep))
M_PMSE2 = data.frame(sparse=numeric(rep),fast=numeric(rep),infomax=numeric(rep),ebm=numeric(rep),sfi=numeric(rep),sparse40=numeric(rep),fast40=numeric(rep),infomax40=numeric(rep))
TIME2 = data.frame(sparse=numeric(rep),fast=numeric(rep),infomax=numeric(rep),ebm=numeric(rep),sfi=numeric(rep),sparse40=numeric(rep),fast40=numeric(rep),infomax40=numeric(rep))
load("../../Data/sim123_nonsparse_mediumSNR.RData")
for (i in 1:rep) {
xmat = xmat_list[[i]]
smat = smat_list[[i]]
mmat = mmat_list[[i]]
# standardized xmat and PCA
xmat_center = scale(xmat,center = T,scale = F)
######################################
# Sparse ICA - single restart
######################################
select_sparseICA= BIC_sparseICA(xData = xmat,n.comp = 3,U.list = NULL,whiten = "eigenvec",
eps = my_eps,maxit = my_maxit,method = "C",irlba = TRUE,
verbose = FALSE,BIC_plot = FALSE,nu_list = seq(0.1,4,0.1))
my_nu = select_sparseICA$best_nu
sparse.start.time = Sys.time()
my_sparseICA = sparseICA(xData = xmat,n.comp = 3,nu = my_nu,whiten = "eigenvec",method = "C",
restarts = 1,irlba = TRUE,eps = my_eps,maxit = my_maxit,verbose = F)
sparse.end.time = Sys.time()
#my_S_sparse = matchICA(my_sparseICA$estS,smat)
my_M_sparse = est.M.ols(my_sparseICA$estS,xmat_center)
S_PMSE2$sparse[i] = sqrt(frobICA(S1=my_sparseICA$estS,S2=smat,standardize = TRUE))
M_PMSE2$sparse[i] = sqrt(frobICA(M1=my_M_sparse,M2=mmat,standardize = TRUE))
TIME2$sparse[i] = as.numeric(sparse.end.time - sparse.start.time)
######################################
# Sparse ICA - 40 restarts
######################################
sparse.start.time = Sys.time()
my_sparseICA = sparseICA(xData = xmat,n.comp = 3,nu = my_nu,whiten = "eigenvec",method = "C",
restarts = 40,irlba = TRUE,eps = my_eps,maxit = my_maxit,verbose = F)
sparse.end.time = Sys.time()
#my_S_sparse = matchICA(my_sparseICA$estS,smat)
my_M_sparse = est.M.ols(my_sparseICA$estS,xmat_center)
S_PMSE2$sparse40[i] = sqrt(frobICA(S1=my_sparseICA$estS,S2=smat,standardize = TRUE))
M_PMSE2$sparse40[i] = sqrt(frobICA(M1=my_M_sparse,M2=mmat,standardize = TRUE))
TIME2$sparse40[i] = as.numeric(sparse.end.time - sparse.start.time)
###############################################################################
infomax.start.time = Sys.time()
my_infomaxICA = infomaxICA(X=xmat,n.comp = 3,whiten = TRUE,eps = my_eps,maxit = my_maxit)
infomax.end.time = Sys.time()
#my_S_infomax = matchICA(my_infomaxICA$S,smat)
#my_M_infomax = est.M.ols(my_S_infomax,xmat_center)
S_PMSE2$infomax[i] = sqrt(frobICA(S1=my_infomaxICA$S,S2=smat,standardize = TRUE))
M_PMSE2$infomax[i] = sqrt(frobICA(M1=my_infomaxICA$M,M2=mmat,standardize = TRUE))
TIME2$infomax[i] = as.numeric(infomax.end.time - infomax.start.time)
# infomax 40 starts
infomax.start.time = Sys.time()
my_infomaxICA = infomaxICA(X=xmat,n.comp = 3,whiten = TRUE,eps = my_eps,maxit = my_maxit,restarts = 40)
infomax.end.time = Sys.time()
#my_S_infomax = matchICA(my_infomaxICA$S,smat)
#my_M_infomax = est.M.ols(my_S_infomax,xmat_center)
S_PMSE2$infomax40[i] = sqrt(frobICA(S1=my_infomaxICA$S,S2=smat,standardize = TRUE))
M_PMSE2$infomax40[i] = sqrt(frobICA(M1=my_infomaxICA$M,M2=mmat,standardize = TRUE))
TIME2$infomax40[i] = as.numeric(infomax.end.time - infomax.start.time)
###############################################################################
fast.start.time = Sys.time()
my_fastICA = fastICA(xmat,n.comp = 3,maxit = my_maxit,tol=my_eps,method = "C")
fast.end.time = Sys.time()
#my_S_fast = matchICA(my_fastICA$S,smat)
#my_M_fast = est.M.ols(my_S_fast,xmat_center)
S_PMSE2$fast[i] = sqrt(frobICA(S1=my_fastICA$S,S2=smat,standardize = TRUE))
M_PMSE2$fast[i] = sqrt(frobICA(M1=my_fastICA$A,M2=mmat,standardize = TRUE))
TIME2$fast[i] = as.numeric(fast.end.time - fast.start.time)
# fast ica 40 starts
fast.start.time = Sys.time()
my_fastICA = fastICA_restarts(xmat,n.comp = 3,maxit = my_maxit,tol=my_eps,restarts = 40,method = "C")
fast.end.time = Sys.time()
#my_S_fast = matchICA(my_fastICA$S,smat)
#my_M_fast = est.M.ols(my_S_fast,xmat_center)
S_PMSE2$fast40[i] = sqrt(frobICA(S1=my_fastICA$S,S2=smat,standardize = TRUE))
M_PMSE2$fast40[i] = sqrt(frobICA(M1=my_fastICA$A,M2=mmat,standardize = TRUE))
TIME2$fast40[i] = as.numeric(fast.end.time - fast.start.time)
###############################################################################
filename = paste0("../../Results/nonsparse/EBM/medium/estS_",i,".mat")
dat = readMat(filename)
temp = cbind(smat,matrix(rnorm(47*1089),nrow = 1089))
my_S_EBM = matchICA(t(dat$myS),temp)
my_S_EBM = my_S_EBM[,1:3]
my_M_EBM = est.M.ols(my_S_EBM,xmat_center)
S_PMSE2$ebm[i] = sqrt(frobICA(S1=my_S_EBM,S2=smat,standardize = TRUE))
M_PMSE2$ebm[i] = sqrt(frobICA(M1=my_M_EBM,M2=mmat,standardize = TRUE))
TIME2$ebm[i] = as.numeric(dat$tEnd)
###############################################################################
filename = paste0("../../Results/nonsparse/sparsefast/medium/estS_",i,".mat")
dat = readMat(filename)
#my_S_sfi = matchICA(t(dat$myS),smat)
#my_M_sfi = est.M.ols(my_S_sfi,xmat_center)
S_PMSE2$sfi[i] = sqrt(frobICA(S1=t(dat$myS),S2=smat,standardize = TRUE))
M_PMSE2$sfi[i] = sqrt(frobICA(M1=t(dat$A),M2=mmat,standardize = TRUE))
TIME2$sfi[i] = as.numeric(dat$tEnd)
}
#######################################################################################################
# High SNR
S_PMSE3 = data.frame(sparse=numeric(rep),fast=numeric(rep),infomax=numeric(rep),ebm=numeric(rep),sfi=numeric(rep),sparse40=numeric(rep),fast40=numeric(rep),infomax40=numeric(rep))
M_PMSE3 = data.frame(sparse=numeric(rep),fast=numeric(rep),infomax=numeric(rep),ebm=numeric(rep),sfi=numeric(rep),sparse40=numeric(rep),fast40=numeric(rep),infomax40=numeric(rep))
TIME3 = data.frame(sparse=numeric(rep),fast=numeric(rep),infomax=numeric(rep),ebm=numeric(rep),sfi=numeric(rep),sparse40=numeric(rep),fast40=numeric(rep),infomax40=numeric(rep))
load("../Data/sim123_nonsparse_highSNR.RData")
load("../../Data/sim123_nonsparse_highSNR.RData")
for (i in 1:rep) {
xmat = xmat_list[[i]]
smat = smat_list[[i]]
mmat = mmat_list[[i]]
# standardized xmat and PCA
xmat_center = scale(xmat,center = T,scale = F)
######################################
# Sparse ICA - single restart
######################################
select_sparseICA= BIC_sparseICA(xData = xmat,n.comp = 3,U.list = NULL,whiten = "eigenvec",
eps = my_eps,maxit = my_maxit,method = "C",irlba = TRUE,
verbose = FALSE,BIC_plot = FALSE,nu_list = seq(0.1,4,0.1))
my_nu = select_sparseICA$best_nu
sparse.start.time = Sys.time()
my_sparseICA = sparseICA(xData = xmat,n.comp = 3,nu = my_nu,whiten = "eigenvec",method = "C",
restarts = 1,irlba = TRUE,eps = my_eps,maxit = my_maxit,verbose = F)
sparse.end.time = Sys.time()
#my_S_sparse = matchICA(my_sparseICA$estS,smat)
my_M_sparse = est.M.ols(my_sparseICA$estS,xmat_center)
S_PMSE3$sparse[i] = sqrt(frobICA(S1=my_sparseICA$estS,S2=smat,standardize = TRUE))
M_PMSE3$sparse[i] = sqrt(frobICA(M1=my_M_sparse,M2=mmat,standardize = TRUE))
TIME3$sparse[i] = as.numeric(sparse.end.time - sparse.start.time)
######################################
# Sparse ICA - 40 restarts
######################################
sparse.start.time = Sys.time()
my_sparseICA = sparseICA(xData = xmat,n.comp = 3,nu = my_nu,whiten = "eigenvec",method = "C",
restarts = 40,irlba = TRUE,eps = my_eps,maxit = my_maxit,verbose = F)
sparse.end.time = Sys.time()
#my_S_sparse = matchICA(my_sparseICA$estS,smat)
my_M_sparse = est.M.ols(my_sparseICA$estS,xmat_center)
S_PMSE3$sparse40[i] = sqrt(frobICA(S1=my_sparseICA$estS,S2=smat,standardize = TRUE))
M_PMSE3$sparse40[i] = sqrt(frobICA(M1=my_M_sparse,M2=mmat,standardize = TRUE))
TIME3$sparse40[i] = as.numeric(sparse.end.time - sparse.start.time)
###############################################################################
infomax.start.time = Sys.time()
my_infomaxICA = infomaxICA(X=xmat,n.comp = 3,whiten = TRUE,eps = my_eps,maxit = my_maxit)
infomax.end.time = Sys.time()
#my_S_infomax = matchICA(my_infomaxICA$S,smat)
#my_M_infomax = est.M.ols(my_S_infomax,xmat_center)
S_PMSE3$infomax[i] = sqrt(frobICA(S1=my_infomaxICA$S,S2=smat,standardize = TRUE))
M_PMSE3$infomax[i] = sqrt(frobICA(M1=my_infomaxICA$M,M2=mmat,standardize = TRUE))
TIME3$infomax[i] = as.numeric(infomax.end.time - infomax.start.time)
# infomax 40 starts
infomax.start.time = Sys.time()
my_infomaxICA = infomaxICA(X=xmat,n.comp = 3,whiten = TRUE,eps = my_eps,maxit = my_maxit,restarts = 40)
infomax.end.time = Sys.time()
#my_S_infomax = matchICA(my_infomaxICA$S,smat)
#my_M_infomax = est.M.ols(my_S_infomax,xmat_center)
S_PMSE3$infomax40[i] = sqrt(frobICA(S1=my_infomaxICA$S,S2=smat,standardize = TRUE))
M_PMSE3$infomax40[i] = sqrt(frobICA(M1=my_infomaxICA$M,M2=mmat,standardize = TRUE))
TIME3$infomax40[i] = as.numeric(infomax.end.time - infomax.start.time)
###############################################################################
fast.start.time = Sys.time()
my_fastICA = fastICA(xmat,n.comp = 3,maxit = my_maxit,tol=my_eps,method = "C")
fast.end.time = Sys.time()
#my_S_fast = matchICA(my_fastICA$S,smat)
#my_M_fast = est.M.ols(my_S_fast,xmat_center)
S_PMSE3$fast[i] = sqrt(frobICA(S1=my_fastICA$S,S2=smat,standardize = TRUE))
M_PMSE3$fast[i] = sqrt(frobICA(M1=my_fastICA$A,M2=mmat,standardize = TRUE))
TIME3$fast[i] = as.numeric(fast.end.time - fast.start.time)
# fast ica 40 starts
fast.start.time = Sys.time()
my_fastICA = fastICA_restarts(xmat,n.comp = 3,maxit = my_maxit,tol=my_eps,restarts = 40,method = "C")
fast.end.time = Sys.time()
#my_S_fast = matchICA(my_fastICA$S,smat)
#my_M_fast = est.M.ols(my_S_fast,xmat_center)
S_PMSE3$fast40[i] = sqrt(frobICA(S1=my_fastICA$S,S2=smat,standardize = TRUE))
M_PMSE3$fast40[i] = sqrt(frobICA(M1=my_fastICA$A,M2=mmat,standardize = TRUE))
TIME3$fast40[i] = as.numeric(fast.end.time - fast.start.time)
###############################################################################
filename = paste0("../../Results/nonsparse/EBM/high/estS_",i,".mat")
dat = readMat(filename)
temp = cbind(smat,matrix(rnorm(47*1089),nrow = 1089))
my_S_EBM = matchICA(t(dat$myS),temp)
my_S_EBM = my_S_EBM[,1:3]
my_M_EBM = est.M.ols(my_S_EBM,xmat_center)
S_PMSE3$ebm[i] = sqrt(frobICA(S1=my_S_EBM,S2=smat,standardize = TRUE))
M_PMSE3$ebm[i] = sqrt(frobICA(M1=my_M_EBM,M2=mmat,standardize = TRUE))
TIME3$ebm[i] = as.numeric(dat$tEnd)
###############################################################################
filename = paste0("../../Results/nonsparse/sparsefast/high/estS_",i,".mat")
dat = readMat(filename)
#my_S_sfi = matchICA(t(dat$myS),smat)
#my_M_sfi = est.M.ols(my_S_sfi,xmat_center)
S_PMSE3$sfi[i] = sqrt(frobICA(S1=t(dat$myS),S2=smat,standardize = TRUE))
M_PMSE3$sfi[i] = sqrt(frobICA(M1=t(dat$A),M2=mmat,standardize = TRUE))
TIME3$sfi[i] = as.numeric(dat$tEnd)
}
save(S_PMSE1,S_PMSE2,S_PMSE3,M_PMSE1,M_PMSE2,M_PMSE3,TIME1,TIME2,TIME3,file = "../../Results/05_PRMSE_sim123_nonsparse.RData")
rm(list = ls())
library(steadyICA)
library(fastICA)
library(irlba)
library(SparseICA)
library(R.matlab)
library(ggplot2)
library(ggpubr)
source("00_utils.R")
# The three given SNR levels
my_SNR = c(0.4,1.5,3)
# Number of replications
rep = 100
# Variance level of inactive points in components
var_level = 0.01
# Overall seed
seed = 2023
# Number of time points in each simulation
my_nTR = 50
# AR structure in each simulation
my_phi = 0.47
# The convergence criterion
my_eps = 1e-6
# The maximum number of iterations
my_maxit = 1000
# Whether it's a noisy ICA model
my_noisyICA = TRUE
load("../../Results/05_PRMSE_sim123_nonsparse.RData")
###################################################################
# Figures for single and multiple restarts
###################################################################
# For S estimates
S_PMSE = data.frame(PMSE=c(S_PMSE1$sparse,S_PMSE1$fast,S_PMSE1$infomax,S_PMSE1$sparse40,S_PMSE1$fast40,S_PMSE1$infomax40,S_PMSE1$ebm,S_PMSE1$sfi,
S_PMSE2$sparse,S_PMSE2$fast,S_PMSE2$infomax,S_PMSE2$sparse40,S_PMSE2$fast40,S_PMSE2$infomax40,S_PMSE2$ebm,S_PMSE2$sfi,
S_PMSE3$sparse,S_PMSE3$fast,S_PMSE3$infomax,S_PMSE3$sparse40,S_PMSE3$fast40,S_PMSE3$infomax40,S_PMSE3$ebm,S_PMSE3$sfi),
Method=c(rep("Sparse ICA",length(S_PMSE1$sparse)),rep("Fast ICA",length(S_PMSE1$fast)),rep("Infomax ICA",length(S_PMSE1$infomax)),rep("Sparse ICA-40",length(S_PMSE1$sparse)),rep("Fast ICA-40",length(S_PMSE1$fast)),rep("Infomax ICA-40",length(S_PMSE1$infomax)),rep("SICA-EBM",length(S_PMSE1$ebm)),rep("Sparse Fast ICA",length(S_PMSE1$sfi)),
rep("Sparse ICA",length(S_PMSE2$sparse)),rep("Fast ICA",length(S_PMSE2$fast)),rep("Infomax ICA",length(S_PMSE2$infomax)),rep("Sparse ICA-40",length(S_PMSE2$sparse)),rep("Fast ICA-40",length(S_PMSE2$fast)),rep("Infomax ICA-40",length(S_PMSE2$infomax)),rep("SICA-EBM",length(S_PMSE2$ebm)),rep("Sparse Fast ICA",length(S_PMSE2$sfi)),
rep("Sparse ICA",length(S_PMSE3$sparse)),rep("Fast ICA",length(S_PMSE3$fast)),rep("Infomax ICA",length(S_PMSE3$infomax)),rep("Sparse ICA-40",length(S_PMSE3$sparse)),rep("Fast ICA-40",length(S_PMSE3$fast)),rep("Infomax ICA-40",length(S_PMSE3$infomax)),rep("SICA-EBM",length(S_PMSE3$ebm)),rep("Sparse Fast ICA",length(S_PMSE3$sfi))
),
SNR=c(rep("Low",8*length(S_PMSE1$sparse)),
rep("Medium",8*length(S_PMSE1$sparse)),
rep("High",8*length(S_PMSE1$sparse)))
)
p1 = ggplot(S_PMSE, aes(factor(SNR,levels = c("Low","Medium","High")), PMSE)) +
geom_boxplot(aes(fill = Method))+ theme_bw() +labs(x="SNR Levels",y="PRMSE",title = "Independent Components")
# For M estimates
M_PMSE = data.frame(PMSE=c(M_PMSE1$sparse,M_PMSE1$fast,M_PMSE1$infomax,M_PMSE1$sparse40,M_PMSE1$fast40,M_PMSE1$infomax40,M_PMSE1$ebm,M_PMSE1$sfi,
M_PMSE2$sparse,M_PMSE2$fast,M_PMSE2$infomax,M_PMSE2$sparse40,M_PMSE2$fast40,M_PMSE2$infomax40,M_PMSE2$ebm,M_PMSE2$sfi,
M_PMSE3$sparse,M_PMSE3$fast,M_PMSE3$infomax,M_PMSE3$sparse40,M_PMSE3$fast40,M_PMSE3$infomax40,M_PMSE3$ebm,M_PMSE3$sfi),
Method=c(rep("Sparse ICA",length(M_PMSE1$sparse)),rep("Fast ICA",length(M_PMSE1$fast)),rep("Infomax ICA",length(M_PMSE1$infomax)),rep("Sparse ICA-40",length(M_PMSE1$sparse)),rep("Fast ICA-40",length(M_PMSE1$fast)),rep("Infomax ICA-40",length(M_PMSE1$infomax)),rep("SICA-EBM",length(M_PMSE1$ebm)),rep("Sparse Fast ICA",length(M_PMSE1$sfi)),
rep("Sparse ICA",length(M_PMSE2$sparse)),rep("Fast ICA",length(M_PMSE2$fast)),rep("Infomax ICA",length(M_PMSE2$infomax)),rep("Sparse ICA-40",length(M_PMSE2$sparse)),rep("Fast ICA-40",length(M_PMSE2$fast)),rep("Infomax ICA-40",length(M_PMSE2$infomax)),rep("SICA-EBM",length(M_PMSE1$ebm)),rep("Sparse Fast ICA",length(M_PMSE1$sfi)),
rep("Sparse ICA",length(M_PMSE3$sparse)),rep("Fast ICA",length(M_PMSE3$fast)),rep("Infomax ICA",length(M_PMSE3$infomax)),rep("Sparse ICA-40",length(M_PMSE3$sparse)),rep("Fast ICA-40",length(M_PMSE3$fast)),rep("Infomax ICA-40",length(M_PMSE3$infomax)),rep("SICA-EBM",length(M_PMSE1$ebm)),rep("Sparse Fast ICA",length(M_PMSE1$sfi))
),
SNR=c(rep("Low",8*length(M_PMSE1$sparse)),
rep("Medium",8*length(M_PMSE1$sparse)),
rep("High",8*length(M_PMSE1$sparse)))
)
p2 = ggplot(M_PMSE, aes(factor(SNR,levels = c("Low","Medium","High")), PMSE)) +
geom_boxplot(aes(fill = Method))+ theme_bw() +labs(x="SNR Levels",y="PRMSE",title = "Mixing Matrix")
# For computation time
TIME = data.frame(TIME=c(TIME1$sparse,TIME1$fast,TIME1$infomax,TIME1$sparse40,TIME1$fast40,TIME1$infomax40,TIME1$ebm,TIME1$sfi,
TIME2$sparse,TIME2$fast,TIME2$infomax,TIME2$sparse40,TIME2$fast40,TIME2$infomax40,TIME2$ebm,TIME2$sfi,
TIME3$sparse,TIME3$fast,TIME3$infomax,TIME3$sparse40,TIME3$fast40,TIME3$infomax40,TIME3$ebm,TIME3$sfi),
Method=c(rep("Sparse ICA",length(TIME1$sparse)),rep("Fast ICA",length(TIME1$fast)),rep("Infomax ICA",length(TIME1$infomax)),rep("Sparse ICA-40",length(TIME1$sparse)),rep("Fast ICA-40",length(TIME1$fast)),rep("Infomax ICA-40",length(TIME1$infomax)),rep("SICA-EBM",length(TIME1$ebm)),rep("Sparse Fast ICA",length(TIME1$sfi)),
rep("Sparse ICA",length(TIME2$sparse)),rep("Fast ICA",length(TIME2$fast)),rep("Infomax ICA",length(TIME2$infomax)),rep("Sparse ICA-40",length(TIME2$sparse)),rep("Fast ICA-40",length(TIME2$fast)),rep("Infomax ICA-40",length(TIME2$infomax)),rep("SICA-EBM",length(TIME2$ebm)),rep("Sparse Fast ICA",length(TIME2$sfi)),
rep("Sparse ICA",length(TIME3$sparse)),rep("Fast ICA",length(TIME3$fast)),rep("Infomax ICA",length(TIME3$infomax)),rep("Sparse ICA-40",length(TIME3$sparse)),rep("Fast ICA-40",length(TIME3$fast)),rep("Infomax ICA-40",length(TIME3$infomax)),rep("SICA-EBM",length(TIME3$ebm)),rep("Sparse Fast ICA",length(TIME3$sfi))),
SNR=c(rep("Low",8*length(TIME1$sparse)),
rep("Medium",8*length(TIME2$sparse)),
rep("High",8*length(TIME3$sparse)))
)
p3 = ggplot(TIME, aes(factor(SNR,levels = c("Low","Medium","High")), TIME)) +
geom_boxplot(aes(fill = Method))+ theme_bw() +labs(x="SNR Levels",y="TIME",title = "Computation Time")#+ylim(c(0,0.25))
ggarrange(p1, p2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
common.legend = T,legend = "bottom")
ggsave("../../Figures/06_sim123_PRMSE_nonsparse_single_multi.pdf",width = 10, height = 6)
###################################################################
# Figures for single restart
###################################################################
# For S estimates
S_PMSE = data.frame(PMSE=c(S_PMSE1$sparse,S_PMSE1$fast,S_PMSE1$infomax,S_PMSE1$ebm,S_PMSE1$sfi,
S_PMSE2$sparse,S_PMSE2$fast,S_PMSE2$infomax,S_PMSE2$ebm,S_PMSE2$sfi,
S_PMSE3$sparse,S_PMSE3$fast,S_PMSE3$infomax,S_PMSE3$ebm,S_PMSE3$sfi),
Method=c(rep("Sparse ICA",length(S_PMSE1$sparse)),rep("Fast ICA",length(S_PMSE1$fast)),rep("Infomax ICA",length(S_PMSE1$infomax)),rep("SICA-EBM",length(S_PMSE1$ebm)),rep("Sparse Fast ICA",length(S_PMSE1$sfi)),
rep("Sparse ICA",length(S_PMSE2$sparse)),rep("Fast ICA",length(S_PMSE2$fast)),rep("Infomax ICA",length(S_PMSE2$infomax)),rep("SICA-EBM",length(S_PMSE2$ebm)),rep("Sparse Fast ICA",length(S_PMSE2$sfi)),
rep("Sparse ICA",length(S_PMSE3$sparse)),rep("Fast ICA",length(S_PMSE3$fast)),rep("Infomax ICA",length(S_PMSE3$infomax)),rep("SICA-EBM",length(S_PMSE3$ebm)),rep("Sparse Fast ICA",length(S_PMSE3$sfi))
),
SNR=c(rep("Low",5*length(S_PMSE1$sparse)),
rep("Medium",5*length(S_PMSE1$sparse)),
rep("High",5*length(S_PMSE1$sparse)))
)
p1 = ggplot(S_PMSE, aes(factor(SNR,levels = c("Low","Medium","High")), PMSE)) +
geom_boxplot(aes(fill = Method))+ theme_bw() +labs(x="SNR Levels",y="PRMSE",title = "Independent Components")
# For M estimates
M_PMSE = data.frame(PMSE=c(M_PMSE1$sparse,M_PMSE1$fast,M_PMSE1$infomax,M_PMSE1$ebm,M_PMSE1$sfi,
M_PMSE2$sparse,M_PMSE2$fast,M_PMSE2$infomax,M_PMSE2$ebm,M_PMSE2$sfi,
M_PMSE3$sparse,M_PMSE3$fast,M_PMSE3$infomax,M_PMSE3$ebm,M_PMSE3$sfi),
Method=c(rep("Sparse ICA",length(M_PMSE1$sparse)),rep("Fast ICA",length(M_PMSE1$fast)),rep("Infomax ICA",length(M_PMSE1$infomax)),rep("SICA-EBM",length(M_PMSE1$ebm)),rep("Sparse Fast ICA",length(M_PMSE1$sfi)),
rep("Sparse ICA",length(M_PMSE2$sparse)),rep("Fast ICA",length(M_PMSE2$fast)),rep("Infomax ICA",length(M_PMSE2$infomax)),rep("SICA-EBM",length(M_PMSE1$ebm)),rep("Sparse Fast ICA",length(M_PMSE1$sfi)),
rep("Sparse ICA",length(M_PMSE3$sparse)),rep("Fast ICA",length(M_PMSE3$fast)),rep("Infomax ICA",length(M_PMSE3$infomax)),rep("SICA-EBM",length(M_PMSE1$ebm)),rep("Sparse Fast ICA",length(M_PMSE1$sfi))
),
SNR=c(rep("Low",5*length(M_PMSE1$sparse)),
rep("Medium",5*length(M_PMSE1$sparse)),
rep("High",5*length(M_PMSE1$sparse)))
)
p2 = ggplot(M_PMSE, aes(factor(SNR,levels = c("Low","Medium","High")), PMSE)) +
geom_boxplot(aes(fill = Method))+ theme_bw() +labs(x="SNR Levels",y="PRMSE",title = "Mixing Matrix")
# For computation time
TIME = data.frame(TIME=c(TIME1$sparse,TIME1$fast,TIME1$infomax,TIME1$ebm,TIME1$sfi,
TIME2$sparse,TIME2$fast,TIME2$infomax,TIME2$ebm,TIME2$sfi,
TIME3$sparse,TIME3$fast,TIME3$infomax,TIME3$ebm,TIME3$sfi),
Method=c(rep("Sparse ICA",length(TIME1$sparse)),rep("Fast ICA",length(TIME1$fast)),rep("Infomax ICA",length(TIME1$infomax)),rep("SICA-EBM",length(TIME1$ebm)),rep("Sparse Fast ICA",length(TIME1$sfi)),
rep("Sparse ICA",length(TIME2$sparse)),rep("Fast ICA",length(TIME2$fast)),rep("Infomax ICA",length(TIME2$infomax)),rep("SICA-EBM",length(TIME2$ebm)),rep("Sparse Fast ICA",length(TIME2$sfi)),
rep("Sparse ICA",length(TIME3$sparse)),rep("Fast ICA",length(TIME3$fast)),rep("Infomax ICA",length(TIME3$infomax)),rep("SICA-EBM",length(TIME3$ebm)),rep("Sparse Fast ICA",length(TIME3$sfi))),
SNR=c(rep("Low",5*length(TIME1$sparse)),
rep("Medium",5*length(TIME2$sparse)),
rep("High",5*length(TIME3$sparse)))
)
p3 = ggplot(TIME, aes(factor(SNR,levels = c("Low","Medium","High")), TIME)) +
geom_boxplot(aes(fill = Method))+ theme_bw() +labs(x="SNR Levels",y="TIME",title = "Computation Time")#+ylim(c(0,0.25))
ggarrange(p1, p2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
common.legend = T,legend = "bottom")
ggarrange(p1, p2,
labels = c("A", "B"),
ncol = 2, nrow = 1,
common.legend = T,legend = "bottom")
ggsave("../../Figures/06_sim123_PRMSE_nonsparse_single.pdf",width = 10, height = 6)
apply(TIME1, 2, mean)
apply(TIME2, 2, mean)
apply(TIME3, 2, mean)
