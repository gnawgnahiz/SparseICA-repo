rm(list = ls())
library(SparseICA)
library(steadyICA)
library(fastICA)
library(irlba)
library(R.matlab)
source("00_utils.R")
source("00_utils_group.R")
# Random seeds
seed1 = 79643
seed2 = 82569
seed3 = 49853
# the parameter for Gamma distribution
gamma.rate = 1e-4
gamma.shape = 0.02
# number of subjects
nsub = 20
# number of repetition
nrep = 50
# Full width at half maximum
FWHM = 6
# variance of inactive elements in components
var.inactive = 0
# whether it's under noisy ICA model
noisyICA=TRUE
# number of group components
n.group=3
SNR = 'low'
S_PRMSE1 = data.frame(sparse=rep(NA,nrep),fast=rep(NA,nrep),infomax=rep(NA,nrep),sparse40=rep(NA,nrep),fast40=rep(NA,nrep),infomax40=rep(NA,nrep))
M_avg_PRMSE1 = data.frame(sparse=rep(NA,nrep),fast=rep(NA,nrep),infomax=rep(NA,nrep),sparse40=rep(NA,nrep),fast40=rep(NA,nrep),infomax40=rep(NA,nrep))
TIME1 = data.frame(sparse=rep(NA,nrep),fast=rep(NA,nrep),infomax=rep(NA,nrep),sparse40=rep(NA,nrep),fast40=rep(NA,nrep),infomax40=rep(NA,nrep))
set.seed(seed1)
for (k in 1:nrep) {
# data generation
simData = list()
for (i in 1:nsub){
simData[[i]] = SimFMRI.ngca(snr = SNR, noisyICA=noisyICA,
gamma.rate = gamma.rate, gamma.shape = gamma.shape,
FWHM = FWHM,var.inactive = var.inactive)
}
bic = BIC_group_sparse_ICA(simData,n.group = 3,BIC_plot = T)
start.time = Sys.time()
est_sparse = group_sparse_ICA(simData, n.group = n.group,restarts = 1,nu=bic$best_nu)
end.time = Sys.time()
TIME1$sparse[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_sparse40 = group_sparse_ICA(simData, n.group = n.group,restarts = 40,nu=bic$best_nu)
end.time = Sys.time()
TIME1$sparse40[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_fast = group_fast_ICA(simData, n.group = n.group,restarts = 1)
end.time = Sys.time()
TIME1$fast[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_fast40 = group_fast_ICA(simData, n.group = n.group,restarts = 40)
end.time = Sys.time()
TIME1$fast40[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_infomax = group_infomax_ICA(simData, n.group = n.group,restarts = 1)
end.time = Sys.time()
TIME1$infomax[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_infomax40 = group_infomax_ICA(simData, n.group = n.group,restarts = 40)
end.time = Sys.time()
TIME1$infomax40[k]=as.numeric(end.time - start.time)
S_PRMSE1$sparse[k]=sqrt(frobICA(S1=est_sparse$estS,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE1$fast[k]=sqrt(frobICA(S1=est_fast$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE1$infomax[k]=sqrt(frobICA(S1=est_infomax$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE1$sparse40[k]=sqrt(frobICA(S1=est_sparse40$estS,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE1$fast40[k]=sqrt(frobICA(S1=est_fast40$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE1$infomax40[k]=sqrt(frobICA(S1=est_infomax40$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
a=0
b=0
c=0
d=0
e=0
f=0
for (j in 1:length(simData)) {
xmat_center=scale(simData[[j]]$X,center = T,scale = F)
M_sparse=est.M.ols(est_sparse$estS,xmat_center)
M_fast=est.M.ols(est_fast$S,xmat_center)
M_infomax=est.M.ols(est_infomax$S,xmat_center)
M_sparse40=est.M.ols(est_sparse40$estS,xmat_center)
M_fast40=est.M.ols(est_fast40$S,xmat_center)
M_infomax40=est.M.ols(est_infomax40$S,xmat_center)
a=a+sqrt(frobICA(M1=M_sparse,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
b=b+sqrt(frobICA(M1=M_fast,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
c=c+sqrt(frobICA(M1=M_infomax,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
d=d+sqrt(frobICA(M1=M_sparse40,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
e=e+sqrt(frobICA(M1=M_fast40,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
f=f+sqrt(frobICA(M1=M_infomax40,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
}
M_avg_PRMSE1$sparse[k]=a/nsub
M_avg_PRMSE1$fast[k]=b/nsub
M_avg_PRMSE1$infomax[k]=c/nsub
M_avg_PRMSE1$sparse40[k]=d/nsub
M_avg_PRMSE1$fast40[k]=e/nsub
M_avg_PRMSE1$infomax40[k]=f/nsub
cat("The ",k,"th replication finished!\n")
}
View(BIC_group_sparse_ICA)
rm(list = ls())
library(SparseICA)
library(steadyICA)
library(fastICA)
library(irlba)
library(R.matlab)
source("00_utils.R")
source("00_utils_group.R")
# Random seeds
seed1 = 79643
seed2 = 82569
seed3 = 49853
# the parameter for Gamma distribution
gamma.rate = 1e-4
gamma.shape = 0.02
# number of subjects
nsub = 20
# number of repetition
nrep = 50
# Full width at half maximum
FWHM = 6
# variance of inactive elements in components
var.inactive = 0
# whether it's under noisy ICA model
noisyICA=TRUE
# number of group components
n.group=3
SNR = 'low'
S_PRMSE1 = data.frame(sparse=rep(NA,nrep),fast=rep(NA,nrep),infomax=rep(NA,nrep),sparse40=rep(NA,nrep),fast40=rep(NA,nrep),infomax40=rep(NA,nrep))
M_avg_PRMSE1 = data.frame(sparse=rep(NA,nrep),fast=rep(NA,nrep),infomax=rep(NA,nrep),sparse40=rep(NA,nrep),fast40=rep(NA,nrep),infomax40=rep(NA,nrep))
TIME1 = data.frame(sparse=rep(NA,nrep),fast=rep(NA,nrep),infomax=rep(NA,nrep),sparse40=rep(NA,nrep),fast40=rep(NA,nrep),infomax40=rep(NA,nrep))
set.seed(seed1)
for (k in 1:nrep) {
# data generation
simData = list()
for (i in 1:nsub){
simData[[i]] = SimFMRI.ngca(snr = SNR, noisyICA=noisyICA,
gamma.rate = gamma.rate, gamma.shape = gamma.shape,
FWHM = FWHM,var.inactive = var.inactive)
}
bic = BIC_group_sparse_ICA(simData,n.group = 3,BIC_plot = T)
start.time = Sys.time()
est_sparse = group_sparse_ICA(simData, n.group = n.group,restarts = 1,nu=bic$best_nu)
end.time = Sys.time()
TIME1$sparse[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_sparse40 = group_sparse_ICA(simData, n.group = n.group,restarts = 40,nu=bic$best_nu)
end.time = Sys.time()
TIME1$sparse40[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_fast = group_fast_ICA(simData, n.group = n.group,restarts = 1)
end.time = Sys.time()
TIME1$fast[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_fast40 = group_fast_ICA(simData, n.group = n.group,restarts = 40)
end.time = Sys.time()
TIME1$fast40[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_infomax = group_infomax_ICA(simData, n.group = n.group,restarts = 1)
end.time = Sys.time()
TIME1$infomax[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_infomax40 = group_infomax_ICA(simData, n.group = n.group,restarts = 40)
end.time = Sys.time()
TIME1$infomax40[k]=as.numeric(end.time - start.time)
S_PRMSE1$sparse[k]=sqrt(frobICA(S1=est_sparse$estS,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE1$fast[k]=sqrt(frobICA(S1=est_fast$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE1$infomax[k]=sqrt(frobICA(S1=est_infomax$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE1$sparse40[k]=sqrt(frobICA(S1=est_sparse40$estS,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE1$fast40[k]=sqrt(frobICA(S1=est_fast40$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE1$infomax40[k]=sqrt(frobICA(S1=est_infomax40$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
a=0
b=0
c=0
d=0
e=0
f=0
for (j in 1:length(simData)) {
xmat_center=scale(simData[[j]]$X,center = T,scale = F)
M_sparse=est.M.ols(est_sparse$estS,xmat_center)
M_fast=est.M.ols(est_fast$S,xmat_center)
M_infomax=est.M.ols(est_infomax$S,xmat_center)
M_sparse40=est.M.ols(est_sparse40$estS,xmat_center)
M_fast40=est.M.ols(est_fast40$S,xmat_center)
M_infomax40=est.M.ols(est_infomax40$S,xmat_center)
a=a+sqrt(frobICA(M1=M_sparse,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
b=b+sqrt(frobICA(M1=M_fast,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
c=c+sqrt(frobICA(M1=M_infomax,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
d=d+sqrt(frobICA(M1=M_sparse40,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
e=e+sqrt(frobICA(M1=M_fast40,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
f=f+sqrt(frobICA(M1=M_infomax40,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
}
M_avg_PRMSE1$sparse[k]=a/nsub
M_avg_PRMSE1$fast[k]=b/nsub
M_avg_PRMSE1$infomax[k]=c/nsub
M_avg_PRMSE1$sparse40[k]=d/nsub
M_avg_PRMSE1$fast40[k]=e/nsub
M_avg_PRMSE1$infomax40[k]=f/nsub
cat("The ",k,"th replication finished!\n")
}
SNR = 'medium'
S_PRMSE2 = data.frame(sparse=rep(NA,nrep),fast=rep(NA,nrep),infomax=rep(NA,nrep),sparse40=rep(NA,nrep),fast40=rep(NA,nrep),infomax40=rep(NA,nrep))
M_avg_PRMSE2 = data.frame(sparse=rep(NA,nrep),fast=rep(NA,nrep),infomax=rep(NA,nrep),sparse40=rep(NA,nrep),fast40=rep(NA,nrep),infomax40=rep(NA,nrep))
TIME2 = data.frame(sparse=rep(NA,nrep),fast=rep(NA,nrep),infomax=rep(NA,nrep),sparse40=rep(NA,nrep),fast40=rep(NA,nrep),infomax40=rep(NA,nrep))
set.seed(seed2)
for (k in 1:nrep) {
# data generation
simData = list()
for (i in 1:nsub){
simData[[i]] = SimFMRI.ngca(snr = SNR, noisyICA=noisyICA,
gamma.rate = gamma.rate, gamma.shape = gamma.shape,
FWHM = FWHM,var.inactive = var.inactive)
}
bic = BIC_group_sparse_ICA(simData,n.group = 3,BIC_plot = T)
start.time = Sys.time()
est_sparse = group_sparse_ICA(simData, n.group = n.group,restarts = 1,nu=bic$best_nu)
end.time = Sys.time()
TIME2$sparse[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_sparse40 = group_sparse_ICA(simData, n.group = n.group,restarts = 40,nu=bic$best_nu)
end.time = Sys.time()
TIME2$sparse40[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_fast = group_fast_ICA(simData, n.group = n.group,restarts = 1)
end.time = Sys.time()
TIME2$fast[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_fast40 = group_fast_ICA(simData, n.group = n.group,restarts = 40)
end.time = Sys.time()
TIME2$fast40[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_infomax = group_infomax_ICA(simData, n.group = n.group,restarts = 1)
end.time = Sys.time()
TIME2$infomax[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_infomax40 = group_infomax_ICA(simData, n.group = n.group,restarts = 40)
end.time = Sys.time()
TIME2$infomax40[k]=as.numeric(end.time - start.time)
S_PRMSE2$sparse[k]=sqrt(frobICA(S1=est_sparse$estS,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE2$fast[k]=sqrt(frobICA(S1=est_fast$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE2$infomax[k]=sqrt(frobICA(S1=est_infomax$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE2$sparse40[k]=sqrt(frobICA(S1=est_sparse40$estS,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE2$fast40[k]=sqrt(frobICA(S1=est_fast40$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE2$infomax40[k]=sqrt(frobICA(S1=est_infomax40$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
a=0
b=0
c=0
d=0
e=0
f=0
for (j in 1:length(simData)) {
xmat_center=scale(simData[[j]]$X,center = T,scale = F)
M_sparse=est.M.ols(est_sparse$estS,xmat_center)
M_fast=est.M.ols(est_fast$S,xmat_center)
M_infomax=est.M.ols(est_infomax$S,xmat_center)
M_sparse40=est.M.ols(est_sparse40$estS,xmat_center)
M_fast40=est.M.ols(est_fast40$S,xmat_center)
M_infomax40=est.M.ols(est_infomax40$S,xmat_center)
a=a+sqrt(frobICA(M1=M_sparse,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
b=b+sqrt(frobICA(M1=M_fast,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
c=c+sqrt(frobICA(M1=M_infomax,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
d=d+sqrt(frobICA(M1=M_sparse40,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
e=e+sqrt(frobICA(M1=M_fast40,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
f=f+sqrt(frobICA(M1=M_infomax40,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
}
M_avg_PRMSE2$sparse[k]=a/nsub
M_avg_PRMSE2$fast[k]=b/nsub
M_avg_PRMSE2$infomax[k]=c/nsub
M_avg_PRMSE2$sparse40[k]=d/nsub
M_avg_PRMSE2$fast40[k]=e/nsub
M_avg_PRMSE2$infomax40[k]=f/nsub
cat("The ",k,"th replication finished!\n")
}
SNR = 'high'
S_PRMSE3 = data.frame(sparse=rep(NA,nrep),fast=rep(NA,nrep),infomax=rep(NA,nrep),sparse40=rep(NA,nrep),fast40=rep(NA,nrep),infomax40=rep(NA,nrep))
M_avg_PRMSE3 = data.frame(sparse=rep(NA,nrep),fast=rep(NA,nrep),infomax=rep(NA,nrep),sparse40=rep(NA,nrep),fast40=rep(NA,nrep),infomax40=rep(NA,nrep))
TIME3 = data.frame(sparse=rep(NA,nrep),fast=rep(NA,nrep),infomax=rep(NA,nrep),sparse40=rep(NA,nrep),fast40=rep(NA,nrep),infomax40=rep(NA,nrep))
set.seed(seed3)
for (k in 1:nrep) {
# data generation
simData = list()
for (i in 1:nsub){
simData[[i]] = SimFMRI.ngca(snr = SNR, noisyICA=noisyICA,
gamma.rate = gamma.rate, gamma.shape = gamma.shape,
FWHM = FWHM,var.inactive = var.inactive)
}
bic = BIC_group_sparse_ICA(simData,n.group = 3,BIC_plot = T)
start.time = Sys.time()
est_sparse = group_sparse_ICA(simData, n.group = n.group,restarts = 1,nu=bic$best_nu)
end.time = Sys.time()
TIME3$sparse[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_sparse40 = group_sparse_ICA(simData, n.group = n.group,restarts = 40,nu=bic$best_nu)
end.time = Sys.time()
TIME3$sparse40[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_fast = group_fast_ICA(simData, n.group = n.group,restarts = 1)
end.time = Sys.time()
TIME3$fast[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_fast40 = group_fast_ICA(simData, n.group = n.group,restarts = 40)
end.time = Sys.time()
TIME3$fast40[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_infomax = group_infomax_ICA(simData, n.group = n.group,restarts = 1)
end.time = Sys.time()
TIME3$infomax[k]=as.numeric(end.time - start.time)
start.time = Sys.time()
est_infomax40 = group_infomax_ICA(simData, n.group = n.group,restarts = 40)
end.time = Sys.time()
TIME3$infomax40[k]=as.numeric(end.time - start.time)
S_PRMSE3$sparse[k]=sqrt(frobICA(S1=est_sparse$estS,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE3$fast[k]=sqrt(frobICA(S1=est_fast$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE3$infomax[k]=sqrt(frobICA(S1=est_infomax$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE3$sparse40[k]=sqrt(frobICA(S1=est_sparse40$estS,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE3$fast40[k]=sqrt(frobICA(S1=est_fast40$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
S_PRMSE3$infomax40[k]=sqrt(frobICA(S1=est_infomax40$S,S2=simData[[1]]$S[,1:3],standardize = TRUE))
a=0
b=0
c=0
d=0
e=0
f=0
for (j in 1:length(simData)) {
xmat_center=scale(simData[[j]]$X,center = T,scale = F)
M_sparse=est.M.ols(est_sparse$estS,xmat_center)
M_fast=est.M.ols(est_fast$S,xmat_center)
M_infomax=est.M.ols(est_infomax$S,xmat_center)
M_sparse40=est.M.ols(est_sparse40$estS,xmat_center)
M_fast40=est.M.ols(est_fast40$S,xmat_center)
M_infomax40=est.M.ols(est_infomax40$S,xmat_center)
a=a+sqrt(frobICA(M1=M_sparse,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
b=b+sqrt(frobICA(M1=M_fast,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
c=c+sqrt(frobICA(M1=M_infomax,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
d=d+sqrt(frobICA(M1=M_sparse40,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
e=e+sqrt(frobICA(M1=M_fast40,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
f=f+sqrt(frobICA(M1=M_infomax40,M2=simData[[j]]$Ms[1:3,],standardize = TRUE))
}
M_avg_PRMSE3$sparse[k]=a/nsub
M_avg_PRMSE3$fast[k]=b/nsub
M_avg_PRMSE3$infomax[k]=c/nsub
M_avg_PRMSE3$sparse40[k]=d/nsub
M_avg_PRMSE3$fast40[k]=e/nsub
M_avg_PRMSE3$infomax40[k]=f/nsub
cat("The ",k,"th replication finished!\n")
}
save(S_PRMSE1,S_PRMSE2,S_PRMSE3,M_avg_PRMSE1,M_avg_PRMSE2,M_avg_PRMSE3,TIME1,TIME2,TIME3,file = "../Data/01_group_sparse.RData")
rm(list = ls())
library(ggplot2)
library(ggpubr)
load("../Data/01_group_sparse.RData")
# For S estimates
S_PMSE = data.frame(PMSE=c(S_PRMSE1$sparse40,S_PRMSE1$fast40,S_PRMSE1$infomax40,
S_PRMSE2$sparse40,S_PRMSE2$fast40,S_PRMSE2$infomax40,
S_PRMSE3$sparse40,S_PRMSE3$fast40,S_PRMSE3$infomax40),
Method=c(rep("Group Sparse ICA",length(S_PRMSE1$sparse40)),rep("Group Fast ICA",length(S_PRMSE1$fast40)),rep("Group Infomax ICA",length(S_PRMSE1$infomax40)),
rep("Group Sparse ICA",length(S_PRMSE2$sparse40)),rep("Group Fast ICA",length(S_PRMSE2$fast40)),rep("Group Infomax ICA",length(S_PRMSE2$infomax40)),
rep("Group Sparse ICA",length(S_PRMSE3$sparse40)),rep("Group Fast ICA",length(S_PRMSE3$fast40)),rep("Group Infomax ICA",length(S_PRMSE3$infomax40))
),
SNR=c(rep("Low",3*length(S_PRMSE1$sparse40)),
rep("Medium",3*length(S_PRMSE2$sparse40)),
rep("High",3*length(S_PRMSE3$sparse40)))
)
p1 = ggplot(S_PMSE, aes(factor(SNR,levels = c("Low","Medium","High")), PMSE)) +
geom_boxplot(aes(fill = Method))+ theme_bw() +labs(x="SNR Levels",y="PRMSE",title = "Source Signal")#+scale_fill_brewer(palette="BuPu")
# For M estimates
M_PMSE = data.frame(PMSE=c(M_avg_PRMSE1$sparse40,M_avg_PRMSE1$fast40,M_avg_PRMSE1$infomax40,
M_avg_PRMSE2$sparse40,M_avg_PRMSE2$fast40,M_avg_PRMSE2$infomax40,
M_avg_PRMSE3$sparse40,M_avg_PRMSE3$fast40,M_avg_PRMSE3$infomax40),
Method=c(rep("Group Sparse ICA",length(M_avg_PRMSE1$sparse40)),rep("Group Fast ICA",length(M_avg_PRMSE1$fast40)),rep("Group Infomax ICA",length(M_avg_PRMSE1$infomax40)),
rep("Group Sparse ICA",length(M_avg_PRMSE2$sparse40)),rep("Group Fast ICA",length(M_avg_PRMSE2$fast40)),rep("Group Infomax ICA",length(M_avg_PRMSE2$infomax40)),
rep("Group Sparse ICA",length(M_avg_PRMSE3$sparse40)),rep("Group Fast ICA",length(M_avg_PRMSE3$fast40)),rep("Group Infomax ICA",length(M_avg_PRMSE3$infomax40))
),
SNR=c(rep("Low",3*length(M_avg_PRMSE1$sparse40)),
rep("Medium",3*length(M_avg_PRMSE2$sparse40)),
rep("High",3*length(M_avg_PRMSE3$sparse40)))
)
p2 = ggplot(M_PMSE, aes(factor(SNR,levels = c("Low","Medium","High")), PMSE)) +
geom_boxplot(aes(fill = Method))+ theme_bw() +labs(x="SNR Levels",y="PRMSE",title = "Mixing Matrix")#+scale_fill_brewer(palette="BuPu")
# For computation time, we display the single version for fail comparisons
TIME = data.frame(TIME=c(TIME1$sparse,TIME1$fast,TIME1$infomax,
TIME2$sparse,TIME2$fast,TIME2$infomax,
TIME3$sparse,TIME3$fast,TIME3$infomax),
Method=c(rep("Sparse ICA",length(TIME1$sparse)),rep("Fast ICA",length(TIME1$fast)),rep("Infomax ICA",length(TIME1$infomax)),
rep("Sparse ICA",length(TIME2$sparse)),rep("Fast ICA",length(TIME2$fast)),rep("Infomax ICA",length(TIME2$infomax)),
rep("Sparse ICA",length(TIME3$sparse)),rep("Fast ICA",length(TIME3$fast)),rep("Infomax ICA",length(TIME3$infomax))),
SNR=c(rep("Low",3*length(TIME1$sparse)),
rep("Medium",3*length(TIME2$sparse)),
rep("High",3*length(TIME3$sparse)))
)
p3 = ggplot(TIME, aes(factor(SNR,levels = c("Low","Medium","High")), TIME)) +
geom_boxplot(aes(fill = Method))+ theme_bw() +labs(x="SNR Levels",y="Seconds",title = "Computation Time")#+scale_fill_brewer(palette="BuPu")
ggarrange(p1, p2, p3,
labels = c("A", "B", "C"),
ncol = 3, nrow = 1,
common.legend = T,legend = "bottom")
ggsave("../Figures/02_group_sparse_40restarts.png",width = 10, height = 6)
# For S estimates
S_PMSE = data.frame(PMSE=c(S_PRMSE1$sparse,S_PRMSE1$fast,S_PRMSE1$infomax,
S_PRMSE2$sparse,S_PRMSE2$fast,S_PRMSE2$infomax,
S_PRMSE3$sparse,S_PRMSE3$fast,S_PRMSE3$infomax),
Method=c(rep("Group Sparse ICA",length(S_PRMSE1$sparse)),rep("Group Fast ICA",length(S_PRMSE1$fast)),rep("Group Infomax ICA",length(S_PRMSE1$infomax)),
rep("Group Sparse ICA",length(S_PRMSE2$sparse)),rep("Group Fast ICA",length(S_PRMSE2$fast)),rep("Group Infomax ICA",length(S_PRMSE2$infomax)),
rep("Group Sparse ICA",length(S_PRMSE3$sparse)),rep("Group Fast ICA",length(S_PRMSE3$fast)),rep("Group Infomax ICA",length(S_PRMSE3$infomax))
),
SNR=c(rep("Low",3*length(S_PRMSE1$sparse)),
rep("Medium",3*length(S_PRMSE2$sparse)),
rep("High",3*length(S_PRMSE3$sparse)))
)
p1 = ggplot(S_PMSE, aes(factor(SNR,levels = c("Low","Medium","High")), PMSE)) +
geom_boxplot(aes(fill = Method))+ theme_bw() +labs(x="SNR Levels",y="PRMSE",title = "Source Signal")#+scale_fill_brewer(palette="BuPu")
# For M estimates
M_PMSE = data.frame(PMSE=c(M_avg_PRMSE1$sparse,M_avg_PRMSE1$fast,M_avg_PRMSE1$infomax,
M_avg_PRMSE2$sparse,M_avg_PRMSE2$fast,M_avg_PRMSE2$infomax,
M_avg_PRMSE3$sparse,M_avg_PRMSE3$fast,M_avg_PRMSE3$infomax),
Method=c(rep("Group Sparse ICA",length(M_avg_PRMSE1$sparse)),rep("Group Fast ICA",length(M_avg_PRMSE1$fast)),rep("Group Infomax ICA",length(M_avg_PRMSE1$infomax)),
rep("Group Sparse ICA",length(M_avg_PRMSE2$sparse)),rep("Group Fast ICA",length(M_avg_PRMSE2$fast)),rep("Group Infomax ICA",length(M_avg_PRMSE2$infomax)),
rep("Group Sparse ICA",length(M_avg_PRMSE3$sparse)),rep("Group Fast ICA",length(M_avg_PRMSE3$fast)),rep("Group Infomax ICA",length(M_avg_PRMSE3$infomax))
),
SNR=c(rep("Low",3*length(M_avg_PRMSE1$sparse)),
rep("Medium",3*length(M_avg_PRMSE2$sparse)),
rep("High",3*length(M_avg_PRMSE3$sparse)))
)
p2 = ggplot(M_PMSE, aes(factor(SNR,levels = c("Low","Medium","High")), PMSE)) +
geom_boxplot(aes(fill = Method))+ theme_bw() +labs(x="SNR Levels",y="PRMSE",title = "Mixing Matrix")#+scale_fill_brewer(palette="BuPu")
# For computation time, we display the single version for fail comparisons
TIME = data.frame(TIME=c(TIME1$sparse,TIME1$fast,TIME1$infomax,
TIME2$sparse,TIME2$fast,TIME2$infomax,
TIME3$sparse,TIME3$fast,TIME3$infomax),
Method=c(rep("Sparse ICA",length(TIME1$sparse)),rep("Fast ICA",length(TIME1$fast)),rep("Infomax ICA",length(TIME1$infomax)),
rep("Sparse ICA",length(TIME2$sparse)),rep("Fast ICA",length(TIME2$fast)),rep("Infomax ICA",length(TIME2$infomax)),
rep("Sparse ICA",length(TIME3$sparse)),rep("Fast ICA",length(TIME3$fast)),rep("Infomax ICA",length(TIME3$infomax))),
SNR=c(rep("Low",3*length(TIME1$sparse)),
rep("Medium",3*length(TIME2$sparse)),
rep("High",3*length(TIME3$sparse)))
)
p3 = ggplot(TIME, aes(factor(SNR,levels = c("Low","Medium","High")), TIME)) +
geom_boxplot(aes(fill = Method))+ theme_bw() +labs(x="SNR Levels",y="Seconds",title = "Computation Time")#+scale_fill_brewer(palette="BuPu")
ggarrange(p1, p2, p3,
labels = c("A", "B", "C"),
ncol = 3, nrow = 1,
common.legend = T,legend = "bottom")
ggsave("../Figures/02_group_sparse_single.png",width = 10, height = 6)
load("../Results/01_group_sparse.RData")
